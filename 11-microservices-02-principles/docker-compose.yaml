version: '3.8'

volumes:
  data:
  prometheus-data:
  grafana_data:
  elasticsearch_data:

services:
  storage:
    image: minio/minio:latest
    command: server /data
    restart: always
    expose:
      - 9000
    environment:
      MINIO_ROOT_USER: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${Storage_Secret:-STORAGE_SECRET_KEY}
      MINIO_PROMETHEUS_AUTH_TYPE: public
    volumes:
      - data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      - storage
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add storage http://storage:9000 ${Storage_AccessKey-STORAGE_ACCESS_KEY} ${Storage_Secret-STORAGE_SECRET_KEY} &&
      /usr/bin/mc mb --ignore-existing storage/${Storage_Bucket:-data} &&
      /usr/bin/mc policy set download storage/${Storage_Bucket:-data} &&
      exit 0;
      "

  uploader:
    build: ./uploader
    depends_on:
      - storage
      - createbuckets
    expose:
      - 3000
    environment:
      PORT: 3000
      S3_HOST: storage
      S3_PORT: 9000
      S3_ACCESS_KEY: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      S3_ACCESS_SECRET: ${Storage_Secret:-STORAGE_SECRET_KEY}
      S3_BUCKET: ${Storage_Bucket:-STORAGE_BUCKET}

  security:
    build: ./security
    expose:
      - 3000
    environment:
      PORT: 3000

  vector:
    image: timberio/vector:nightly-distroless-static
    depends_on:
      - storage
      - uploader
      - security
    volumes:
      - ./vector/config/vector.yml:/etc/vector/vector.yml
    command: ["-c", "/etc/vector/vector.yml"]

  elasticsearch:
    image: elasticsearch:8.7.0
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # Отключаем безопасность
      - xpack.security.transport.ssl.enabled=false # Отключаем SSL для транспорта

  kibana:
    image: kibana:8.7.0
    ports:
      - "8081:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch

  gateway:
    image: nginx:alpine
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf

    ports:
      - "80:8080"
    depends_on:
      - storage
      - uploader
      - security
